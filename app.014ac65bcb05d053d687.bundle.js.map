{"version":3,"file":"app.014ac65bcb05d053d687.bundle.js","mappings":"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","sources":["webpack://Battleship/./src/scripts/dom.js","webpack://Battleship/./src/scripts/drag.js","webpack://Battleship/./src/scripts/gamecontroller.js","webpack://Battleship/./src/scripts/input.js","webpack://Battleship/./src/scripts/menu.js","webpack://Battleship/./src/scripts/placement.js","webpack://Battleship/./src/scripts/ship.js","webpack://Battleship/./src/scripts/gameboard.js","webpack://Battleship/./src/scripts/player.js"],"sourcesContent":["import staticLocation from \"../assets/static.gif\";\nimport staticSoundLocation from \"../assets/static.mp3\";\nconst staticSound = new Audio(staticSoundLocation);\n\nexport function updateTitle() {\n  const title = document.getElementById(\"title\");\n  title.textContent = \"Control Center\";\n}\n\nexport function generateBoard(player) {\n  const boardContainer = document.getElementById(player.id + \"-container\");\n  boardContainer.style.display = \"flex\";\n\n  const board = document.getElementById(player.id);\n  board.innerHTML = \"\";\n\n  for (let i = 0; i < 10; i++) {\n    for (let j = 0; j < 10; j++) {\n      const cell = document.createElement(\"div\");\n      cell.classList.add(\"cell\");\n\n      const currentCell = player.gameboard.board[i][j];\n      if (\n        currentCell &&\n        typeof currentCell === \"object\" &&\n        currentCell !== null &&\n        player.name !== \"Computer\"\n      ) {\n        cell.classList.add(\"ship\");\n      }\n      cell.setAttribute(\"coords\", `${i},${j}`);\n      board.appendChild(cell);\n    }\n  }\n}\n\nexport function updateBoard(player, coords) {\n  const board = document.getElementById(player.id);\n  const [row, col] = coords;\n  const cellDiv = board.querySelector(`[coords=\"${row},${col}\"]`);\n  const currentCell = player.gameboard.board[row][col];\n\n  if (\n    currentCell &&\n    typeof currentCell === \"object\" &&\n    currentCell !== null &&\n    currentCell.isSunk()\n  ) {\n    cellDiv.classList.add(\"hit\");\n    const shipCoords = currentCell.coords;\n    shipCoords.reverse().forEach((coord, index) => {\n      setTimeout(() => {\n        const [x, y] = coord;\n        const cellDiv = board.querySelector(`[coords=\"${x},${y}\"]`);\n        cellDiv.classList.add(\"sunk\");\n      }, index * 200);\n    });\n  } else if (\n    player.gameboard.misses.some((miss) => miss[0] === row && miss[1] === col)\n  ) {\n    cellDiv.classList.add(\"miss\");\n  } else if (\n    player.gameboard.hits.some((hit) => hit[0] === row && hit[1] === col)\n  ) {\n    cellDiv.classList.remove(\"ship\");\n    cellDiv.classList.add(\"hit\");\n  }\n}\nexport function updateShipCells(player, coord) {\n  const board = document.getElementById(player.id);\n  const [row, col] = coord;\n  const cellDiv = board.querySelector(`[coords=\"${row},${col}\"]`);\n  cellDiv.classList.add(\"ship\");\n}\n\nexport function clearShipCells(player) {\n  const board = document.getElementById(player.id);\n  board.querySelectorAll(\".cell\").forEach((cell) => {\n    cell.classList.remove(\"ship\");\n  });\n}\n\nexport function changeToControlCenter() {\n  updateTitle();\n\n  const dockingStation = document.getElementById(\"fleet-dock\");\n  const deployButton = document.getElementById(\"deploy-button\");\n  dockingStation.style.display = \"none\";\n  deployButton.style.display = \"none\";\n}\n\nexport function transition() {\n  if (localStorage.getItem(\"sfxEnabled\") === \"true\") {\n    staticSound.volume = 0.2;\n    staticSound.play();\n    setTimeout(() => {\n      staticSound.pause();\n      staticSound.currentTime = 0;\n    }, 550);\n  }\n\n  const staticGif = document.createElement(\"img\");\n  staticGif.src = staticLocation;\n  staticGif.style.position = \"fixed\";\n  staticGif.style.top = \"0\";\n  staticGif.style.left = \"0\";\n  staticGif.style.width = \"100%\";\n  staticGif.style.height = \"100%\";\n  staticGif.style.zIndex = \"9998\";\n  staticGif.style.opacity = \"0.2\";\n  staticGif.style.pointerEvents = \"none\";\n  staticGif.style.transition = \"opacity 0.1s ease-in-out\";\n  document.body.appendChild(staticGif);\n\n  setTimeout(() => {\n    staticGif.style.opacity = \"0\";\n    setTimeout(() => {\n      document.body.removeChild(staticGif);\n    }, 300);\n  }, 300);\n}\n\nexport function winScreen() {\n  const gameboard = document.getElementById(\"gameboards\");\n  const title = document.getElementById(\"title\");\n  const gameOverScreen = document.getElementById(\"game-over-screen\");\n  const gameWinMessage = document.getElementById(\"game-win-message\");\n  gameOverScreen.style.display = \"flex\";\n  gameWinMessage.style.display = \"block\";\n  gameboard.style.display = \"none\";\n  title.style.display = \"none\";\n}\n\nexport function loseScreen() {\n  const gameboard = document.getElementById(\"gameboards\");\n  const title = document.getElementById(\"title\");\n  const gameOverScreen = document.getElementById(\"game-over-screen\");\n  const gameLoseMessage = document.getElementById(\"game-lose-message\");\n  const backToMenuButton = document.getElementById(\"back-to-menu-button\");\n\n  gameOverScreen.style.display = \"flex\";\n  gameLoseMessage.style.display = \"block\";\n  gameboard.style.display = \"none\";\n  title.style.display = \"none\";\n\n  document.body.style.flexDirection = \"column\";\n  document.body.style.backgroundColor = \"var(--background-color-lose)\";\n  document.body.style.color = \"var(--text-color)\";\n  document.body.style.margin = \"0\";\n  document.body.style.padding = \"0\";\n  document.body.style.display = \"flex\";\n  document.body.style.justifyContent = \"center\";\n  document.body.style.alignItems = \"center\";\n  document.body.style.height = \"100vh\";\n  document.body.style.width = \"100vw\";\n  document.body.style.position = \"relative\";\n  document.body.style.filter = \"contrast(1.1) brightness(1.2) blur(0.6px)\";\n  document.body.style.animation = \"fadeIn 1s ease-out\";\n  document.body.style.boxSizing = \"border-box\";\n\n  const beforeStyle = document.createElement(\"style\");\n  beforeStyle.innerHTML = `\n    body::before {\n      content: \"\";\n      position: absolute;\n      inset: 0;\n      background: repeating-linear-gradient(\n        to bottom,\n        var(--scanline-color-lose) 0%,\n        var(--scanline-color-lose) 0.064rem,\n        transparent 0.0625rem,\n        transparent 0.3rem\n      ),\n      radial-gradient(circle, transparent, transparent 70%, rgba(0, 0, 0, 0.5));\n      animation: scanlines 0.5s infinite;\n      pointer-events: none;\n      z-index: 9998;\n    }\n    #back-to-menu-button:hover {\n      background-color: var(--cell-highlight-color-lose);\n    }\n    #back-to-menu-button {\n      background-color: var(--board-bg-color-lose);\n      color: var(--cell-hit-color);\n      border: 0.25rem solid var(--board-border-color-lose);\n    }\n  `;\n  document.head.appendChild(beforeStyle);\n}\n","import { clearShipCells, updateShipCells, transition } from \"./dom.js\";\nimport placeSoundLocation from \"../assets/place.wav\";\nimport errorSoundLocation from \"../assets/error.wav\";\nimport rotateSoundLocation from \"../assets/rotate.wav\";\nimport trashSoundLocation from \"../assets/trash.wav\";\nimport deploySoundLocation from \"../assets/deploy.wav\";\n\nconst rotateSound = new Audio(rotateSoundLocation);\nconst placeSound = new Audio(placeSoundLocation);\nconst errorSound = new Audio(errorSoundLocation);\nconst trashSound = new Audio(trashSoundLocation);\nconst deploySound = new Audio(deploySoundLocation);\n\nexport function playSound(sound) {\n  if (localStorage.getItem(\"sfxEnabled\") === \"true\") {\n    sound.play();\n  }\n}\n\nexport function playSong(song) {\n  if (localStorage.getItem(\"musicEnabled\") === \"true\") {\n    song.volume = 0.5;\n    song.play().catch((err) => console.log(\"Error playing song:\", err));\n    song.loop = true;\n  }\n}\n\nfunction handleDragStart(event) {\n  event.target.classList.add(\"dragging\");\n}\n\nfunction handleDragEnd(event) {\n  event.target.classList.remove(\"dragging\");\n}\n\nfunction handleDragOver(event) {\n  const shipsContainer = document.getElementById(\"ship-placement\");\n\n  if (!shipsContainer.classList.contains(\"vertical.container\")) {\n    event.preventDefault();\n    const cell = event.target;\n    const [row, col] = cell.getAttribute(\"coords\").split(\",\").map(Number);\n    const ship = document.querySelector(\".dragging\");\n    const shipLength = ship.children.length;\n\n    cell.classList.add(\"highlight\");\n    for (let i = 0; i < shipLength; i++) {\n      const highlightRow = row - shipLength + 1 >= 0 ? row - i : row + i;\n      document\n        .querySelector(`[coords=\"${highlightRow},${col}\"]`)\n        .classList.add(\"highlight\");\n    }\n  } else {\n    event.preventDefault();\n    const cell = event.target;\n    const [row, col] = cell.getAttribute(\"coords\").split(\",\").map(Number);\n    const ship = document.querySelector(\".dragging\");\n    const shipLength = ship.children.length;\n\n    cell.classList.add(\"highlight\");\n    for (let i = 0; i < shipLength; i++) {\n      const highlightCol = col - shipLength + 1 >= 0 ? col - i : col + i;\n      document\n        .querySelector(`[coords=\"${row},${highlightCol}\"]`)\n        .classList.add(\"highlight\");\n    }\n  }\n}\n\nfunction handleDragLeave(event) {\n  document.querySelectorAll(\".cell\").forEach((cell) => {\n    cell.classList.remove(\"highlight\");\n  });\n}\n\nfunction handleDrop(event, player) {\n  const shipsContainer = document.getElementById(\"ship-placement\");\n\n  if (!shipsContainer.classList.contains(\"vertical.container\")) {\n    event.preventDefault();\n    try {\n      const shipPlacement = document.querySelectorAll(\".highlight\");\n      const smallestCell = Array.from(shipPlacement).reduce(\n        (smallest, cell) => {\n          const [row] = cell.getAttribute(\"coords\").split(\",\").map(Number);\n          const [smallestRow] = smallest\n            .getAttribute(\"coords\")\n            .split(\",\")\n            .map(Number);\n          return row < smallestRow ? cell : smallest;\n        },\n        shipPlacement[0]\n      );\n\n      const [row, col] = smallestCell\n        .getAttribute(\"coords\")\n        .split(\",\")\n        .map(Number);\n\n      // Check for collisions on each cell\n      shipPlacement.forEach((cell) => {\n        const coords = cell.getAttribute(\"coords\").split(\",\").map(Number);\n        player.gameboard.checkCollision(coords[0], coords[1]);\n      });\n\n      player.gameboard.place([row, col], shipPlacement.length, 0);\n\n      shipPlacement.forEach((cell) => {\n        cell.classList.remove(\"highlight\");\n        const coords = cell.getAttribute(\"coords\").split(\",\").map(Number);\n        updateShipCells(player, coords);\n      });\n      playSound(placeSound);\n\n      const draggingShip = document.querySelector(\".dragging\");\n      draggingShip.classList.add(\"placed\");\n      draggingShip.draggable = false;\n    } catch (error) {\n      playSound(errorSound);\n      document.querySelectorAll(\".cell\").forEach((cell) => {\n        cell.classList.remove(\"highlight\");\n      });\n      console.error(\"Error during drop event:\", error);\n    }\n  } else {\n    event.preventDefault();\n    try {\n      const shipPlacement = document.querySelectorAll(\".highlight\");\n      const smallestCell = Array.from(shipPlacement).reduce(\n        (smallest, cell) => {\n          const [row] = cell.getAttribute(\"coords\").split(\",\").map(Number);\n          const [smallestRow] = smallest\n            .getAttribute(\"coords\")\n            .split(\",\")\n            .map(Number);\n          return row < smallestRow ? cell : smallest;\n        },\n        shipPlacement[0]\n      );\n\n      const [row, col] = smallestCell\n        .getAttribute(\"coords\")\n        .split(\",\")\n        .map(Number);\n\n      // Check for collisions on each cell\n      shipPlacement.forEach((cell) => {\n        const coords = cell.getAttribute(\"coords\").split(\",\").map(Number);\n        player.gameboard.checkCollision(coords[0], coords[1]);\n      });\n\n      player.gameboard.place([row, col], shipPlacement.length, 1);\n\n      shipPlacement.forEach((cell) => {\n        cell.classList.remove(\"highlight\");\n        const coords = cell.getAttribute(\"coords\").split(\",\").map(Number);\n        updateShipCells(player, coords);\n      });\n      playSound(placeSound);\n\n      const draggingShip = document.querySelector(\".dragging\");\n      draggingShip.classList.add(\"placed\");\n      draggingShip.draggable = false;\n    } catch (error) {\n      playSound(errorSound);\n      document.querySelectorAll(\".cell\").forEach((cell) => {\n        cell.classList.remove(\"highlight\");\n      });\n      console.error(\"Error during drop event:\", error);\n    }\n  }\n}\n\nexport default function dragDrop(player) {\n  return new Promise((resolve) => {\n    const draggables = document.querySelectorAll(\".ship-draggable\");\n    const cells = document.querySelectorAll(\".cell\");\n\n    draggables.forEach((draggable) => {\n      draggable.addEventListener(\"dragstart\", handleDragStart);\n      draggable.addEventListener(\"dragend\", handleDragEnd);\n    });\n\n    cells.forEach((cell) => {\n      cell.addEventListener(\"dragover\", handleDragOver);\n      cell.addEventListener(\"dragleave\", handleDragLeave);\n      cell.addEventListener(\"drop\", (event) => handleDrop(event, player));\n    });\n\n    (function rotateButton() {\n      const rotateButton = document.getElementById(\"rotate-button\");\n      const shipsContainer = document.getElementById(\"ship-placement\");\n      const ships = document.querySelectorAll(\".ship-draggable\");\n\n      rotateButton.addEventListener(\"click\", () => {\n        playSound(rotateSound);\n        if (shipsContainer.classList.contains(\"vertical.container\")) {\n          shipsContainer.classList.remove(\"vertical.container\");\n          ships.forEach((ship) => {\n            ship.style.flexDirection = \"row\";\n          });\n        } else {\n          shipsContainer.classList.add(\"vertical.container\");\n          shipsContainer.style.flexDirection = \"row\";\n          shipsContainer.style.flexWrap = \"wrap\";\n          ships.forEach((ship) => {\n            ship.style.flexDirection = \"column\";\n          });\n        }\n      });\n    })();\n\n    (function trashButton() {\n      const trashButton = document.getElementById(\"trash-button\");\n\n      trashButton.addEventListener(\"click\", () => {\n        playSound(trashSound);\n        player.gameboard.ships = [];\n        player.gameboard.board = Array.from({ length: 10 }, () =>\n          Array(10).fill(null)\n        );\n\n        clearShipCells(player);\n\n        const draggables = document.querySelectorAll(\".ship-draggable\");\n\n        draggables.forEach((draggable) => {\n          draggable.classList.remove(\"placed\");\n          draggable.draggable = true;\n        });\n      });\n    })();\n\n    (function deployButton() {\n      const deployButton = document.getElementById(\"deploy-button\");\n\n      deployButton.addEventListener(\"click\", () => {\n        if (player.gameboard.ships.length < 5) {\n          playSound(errorSound);\n        } else {\n          transition();\n          playSound(deploySound);\n          resolve();\n        }\n      });\n    })();\n  });\n}\n","document.addEventListener(\"DOMContentLoaded\", () => {\n  feather.replace();\n});\n\nimport { dockingSong } from \"./menu.js\";\nimport rotateSoundLocation from \"../assets/rotate.wav\";\nconst rotateSound = new Audio(rotateSoundLocation);\n\nimport winSongLocation from \"../assets/winSong.mp3\";\nconst winSong = new Audio(winSongLocation);\n\nimport loseSongLocation from \"../assets/loseSong.mp3\";\nconst loseSong = new Audio(loseSongLocation);\n\nimport battleSongLocation from \"../assets/battleSong.mp3\";\nconst battleSong = new Audio(battleSongLocation);\n\nimport \"../styles/styles.css\";\nimport { titleScreen } from \"./menu.js\";\nimport {\n  transition,\n  updateBoard,\n  generateBoard,\n  changeToControlCenter,\n  winScreen,\n  loseScreen,\n} from \"./dom\";\nimport Player from \"./player\";\nimport { getInput, getComputerInput, checkRepeat } from \"./input\";\nimport { getComputerShips } from \"./placement.js\";\nimport dragDrop from \"./drag.js\";\nimport { playSound, playSong } from \"./drag.js\";\nimport feather from \"feather-icons\";\n\nconst player = new Player(\"Player 1\", \"p1-board\");\nconst computer = new Player(\"Computer\", \"p2-board\");\n\nawait titleScreen();\ngenerateBoard(player);\nawait dragDrop(player);\nchangeToControlCenter();\n\n(async function gameLoop(player1, player2, turn = 0) {\n  dockingSong.pause();\n  document.getElementById(\"p1-board-container\").style.pointerEvents = \"none\";\n\n  playSong(battleSong);\n  getComputerShips(player2);\n  generateBoard(player1);\n  generateBoard(player2);\n\n  while (\n    player.gameboard.isDefeated() === false &&\n    computer.gameboard.isDefeated() === false\n  ) {\n    if (turn === 0) {\n      let coords = await getInput();\n      while (checkRepeat(coords, player2)) {\n        coords = await getInput();\n      }\n      player2.gameboard.receiveAttack(coords);\n      updateBoard(player2, coords);\n      turn = 1;\n    } else {\n      const coords = await getComputerInput(player1.gameboard);\n      player1.gameboard.receiveAttack(coords);\n      updateBoard(player1, coords);\n      turn = 0;\n    }\n  }\n  if (player1.gameboard.isDefeated()) {\n    battleSong.pause();\n    transition();\n    playSong(loseSong);\n    loseScreen();\n    const mainMenuButton = document.getElementById(\"back-to-menu-button\");\n    mainMenuButton.addEventListener(\"click\", () => {\n      playSound(rotateSound);\n      location.reload();\n    });\n  } else {\n    battleSong.pause();\n    transition();\n    playSong(winSong);\n    winScreen();\n    const mainMenuButton = document.getElementById(\"back-to-menu-button\");\n    mainMenuButton.addEventListener(\"click\", () => {\n      playSound(rotateSound);\n      location.reload();\n    });\n  }\n})(player, computer);\n","export function getInput() {\n  return new Promise((resolve) => {\n    document.querySelectorAll(\".cell\").forEach((cell) => {\n      cell.addEventListener(\"click\", function handleClick() {\n        const coords = cell\n          .getAttribute(\"coords\")\n          .split(\",\")\n          .map((coord) => parseInt(coord, 10));\n\n        resolve(coords);\n      });\n    });\n  });\n}\n\nexport function getComputerInput(playerGameboard) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      let move;\n\n      // If there's a last hit and the ship is not yet sunk, prioritize adjacent cells\n      if (\n        playerGameboard.lastHitShip &&\n        !playerGameboard.lastHitShip.isSunk()\n      ) {\n        move = selectAdjacentCell(playerGameboard);\n      }\n\n      // If no adjacent cells or no last hit, pick a random cell from available\n      if (!move) {\n        move =\n          playerGameboard.available[\n            Math.floor(Math.random() * playerGameboard.available.length)\n          ];\n      }\n\n      // Check if the selected move hits a ship\n      const { ship, hit } = checkIfHit(move, playerGameboard.ships);\n      if (hit) {\n        playerGameboard.lastHitShip = ship;\n      }\n\n      resolve(move);\n    }, 500);\n  });\n}\n\nexport function selectAdjacentCell(playerGameboard) {\n  const available = playerGameboard.available;\n  const shipCoords = playerGameboard.lastHitShip.coords.map((coord) => {\n    return [coord[0], coord[1]];\n  });\n\n  const validTargets = available.filter((coord) =>\n    shipCoords.some(\n      (shipCoord) => shipCoord[0] === coord[0] && shipCoord[1] === coord[1]\n    )\n  );\n\n  // Decide randomly to select a cell adjacent to the ship (80%) or any cell (20%)\n  if (Math.random() < 0.8) {\n    return validTargets[Math.floor(Math.random() * validTargets.length)];\n  } else {\n    return available[Math.floor(Math.random() * available.length)];\n  }\n}\n\nexport function checkRepeat(coords, player) {\n  if (\n    player.gameboard.hits.some(\n      (ele) => ele[0] === coords[0] && ele[1] === coords[1]\n    ) ||\n    player.gameboard.misses.some(\n      (ele) => ele[0] === coords[0] && ele[1] === coords[1]\n    )\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function checkIfHit(move, ships) {\n  const hitShip = ships.find((ship) =>\n    ship.coords.some((coord) => coord[0] === move[0] && coord[1] === move[1])\n  );\n\n  if (hitShip) {\n    return { ship: hitShip, hit: true };\n  }\n\n  return { ship: null, hit: false };\n}\n","import dockingSongLocation from \"../assets/dockingSong.mp3\";\nimport menuSongLocation from \"../assets/menuSong.mp3\";\nexport const dockingSong = new Audio(dockingSongLocation);\nconst menuSong = new Audio(menuSongLocation);\n\nimport { transition } from \"./dom.js\";\nimport rotateSoundLocation from \"../assets/rotate.wav\";\nconst rotateSound = new Audio(rotateSoundLocation);\n\nexport function titleScreen() {\n  return new Promise((resolve) => {\n    const menuButtons = document.querySelectorAll(\"#menu-buttons button\");\n    const logo = document.getElementById(\"menu-ascii\");\n    const startButton = document.getElementById(\"start-game-button\");\n    const gameboard = document.getElementById(\"gameboards\");\n    const deployButton = document.getElementById(\"deploy-button\");\n    const headerText = document.getElementById(\"title\");\n    const settingsButton = document.getElementById(\"settings-button\");\n\n    // Initialize settings with defaults\n    let musicEnabled = localStorage.getItem(\"musicEnabled\");\n    let sfxEnabled = localStorage.getItem(\"sfxEnabled\");\n\n    if (musicEnabled === null) {\n      musicEnabled = true;\n      localStorage.setItem(\"musicEnabled\", musicEnabled);\n    } else {\n      musicEnabled = musicEnabled === \"true\";\n    }\n\n    if (sfxEnabled === null) {\n      sfxEnabled = true;\n      localStorage.setItem(\"sfxEnabled\", sfxEnabled);\n    } else {\n      sfxEnabled = sfxEnabled === \"true\";\n    }\n\n    // Apply settings\n    if (musicEnabled) {\n      menuSong.volume = 0.5;\n      menuSong.play().catch((err) => console.log(\"Error playing song:\", err));\n      menuSong.loop = true;\n    }\n\n    rotateSound.muted = !sfxEnabled;\n\n    menuButtons.forEach((button) => {\n      button.addEventListener(\"click\", () => {\n        if (sfxEnabled) {\n          rotateSound.play();\n        }\n      });\n    });\n\n    settingsButton.addEventListener(\"click\", () => {\n      const settingsModal = document.getElementById(\"settings-modal\");\n      const closeButton = settingsModal.querySelector(\".close-button\");\n      const musicCheckbox = document.getElementById(\"music-checkbox\");\n      const sfxCheckbox = document.getElementById(\"sfx-checkbox\");\n\n      musicCheckbox.checked = musicEnabled;\n      sfxCheckbox.checked = sfxEnabled;\n\n      settingsModal.style.display = \"flex\";\n\n      closeButton.addEventListener(\"click\", () => {\n        if (sfxEnabled) {\n          rotateSound.play();\n        }\n        settingsModal.style.display = \"none\";\n      });\n    });\n\n    const saveSettingsButton = document.getElementById(\"save-settings-button\");\n    saveSettingsButton.addEventListener(\"click\", () => {\n      musicEnabled = document.getElementById(\"music-checkbox\").checked;\n      sfxEnabled = document.getElementById(\"sfx-checkbox\").checked;\n\n      localStorage.setItem(\"musicEnabled\", musicEnabled);\n      localStorage.setItem(\"sfxEnabled\", sfxEnabled);\n\n      const settingsModal = document.getElementById(\"settings-modal\");\n      settingsModal.style.display = \"none\";\n\n      if (musicEnabled) {\n        menuSong.volume = 0.5;\n        menuSong.play().catch((err) => console.log(\"Error playing song:\", err));\n        menuSong.loop = true;\n      } else {\n        menuSong.pause();\n      }\n\n      rotateSound.muted = !sfxEnabled;\n    });\n\n    startButton.addEventListener(\"click\", () => {\n      transition();\n      if (musicEnabled) {\n        menuSong.pause();\n        dockingSong.volume = 0.5;\n        dockingSong\n          .play()\n          .catch((err) => console.log(\"Error playing song:\", err));\n        dockingSong.loop = true;\n      }\n      document.querySelector(\"#menu-buttons\").style.display = \"none\";\n      logo.style.display = \"none\";\n      gameboard.style.display = \"flex\";\n      deployButton.style.display = \"block\";\n      headerText.style.display = \"block\";\n      resolve();\n    });\n  });\n}\n","function generateCoords(lengths) {\n  const row = Math.floor(Math.random() * 10);\n  const col = Math.floor(Math.random() * 10);\n  const orientation = Math.floor(Math.random() * 2);\n\n  return [[row, col], lengths[0], orientation];\n}\n\nexport function getComputerShips(computer) {\n  const ships = [];\n  const shipLengths = [5, 4, 3, 3, 2];\n\n  while (ships.length < 5) {\n    const [coords, length, orientation] = generateCoords(shipLengths);\n\n    try {\n      computer.gameboard.place(coords, length, orientation);\n      ships.push([coords, length, orientation]);\n      shipLengths.shift();\n    } catch (err) {\n      console.error(\"Computer ship placement invalid, retrying.\");\n    }\n  }\n}\n","export default class Ship {\n  constructor(length) {\n    this.orientation = null;\n    this.length = length;\n    this.hits = 0;\n    this.coords = [];\n  }\n\n  hit() {\n    if (this.hits < this.length) {\n      this.hits++;\n    }\n  }\n\n  isSunk() {\n    return this.hits === this.length ? true : false;\n  }\n}\n","import Ship from \"./ship.js\";\nimport hitSoundLocation from \"../assets/hit.wav\";\nimport missSoundLocation from \"../assets/miss.wav\";\nimport sunkSoundLocation from \"../assets/sunk.wav\";\nconst missSound = new Audio(missSoundLocation);\nconst hitSound = new Audio(hitSoundLocation);\nconst sunkSound = new Audio(sunkSoundLocation);\n\nexport default class Gameboard {\n  constructor() {\n    this.board = Array.from({ length: 10 }, () => Array(10).fill(null));\n    this.ships = [];\n    this.misses = [];\n    this.hits = [];\n    this.available = [];\n    for (let i = 0; i < 10; i++) {\n      for (let j = 0; j < 10; j++) {\n        this.available.push([i, j]);\n      }\n    }\n    this.lastHitShip = null;\n  }\n\n  validateCoordinates(row, col) {\n    if (row < 0 || row > 9 || col < 0 || col > 9) {\n      throw new Error(\"Coordinates out of bounds!\");\n    }\n  }\n\n  checkBoundary(row, col, length, orientation) {\n    if (\n      (orientation === 0 && row + length > 10) || // Vertical boundary check\n      (orientation === 1 && col + length > 10) // Horizontal boundary check\n    ) {\n      throw new Error(\"Ship would exceed board!\");\n    }\n  }\n\n  checkCollision(row, col) {\n    if (\n      this.ships.some((ship) =>\n        ship.coords.some((coord) => coord[0] === row && coord[1] === col)\n      )\n    ) {\n      throw new Error(\"Ship already placed here!\");\n    }\n  }\n\n  place(coords, length, orientation) {\n    const [row, col] = coords;\n\n    this.validateCoordinates(row, col);\n    this.checkBoundary(row, col, length, orientation);\n    for (let i = 0; i < length; i++) {\n      const x = orientation === 0 ? row + i : row;\n      const y = orientation === 1 ? col + i : col;\n      this.checkCollision(x, y);\n    }\n\n    const ship = new Ship(length);\n\n    for (let i = 0; i < length; i++) {\n      const x = orientation === 0 ? row + i : row;\n      const y = orientation === 1 ? col + i : col;\n      this.board[x][y] = ship;\n      ship.coords.push([x, y]);\n    }\n    this.ships.push(ship);\n  }\n\n  receiveAttack(coords) {\n    const [row, col] = coords;\n    this.validateCoordinates(row, col);\n\n    let cell = this.board[row][col];\n\n    if (cell === null) {\n      if (localStorage.getItem(\"sfxEnabled\") === \"true\") {\n        missSound.play();\n      }\n      this.board[row][col] = \"MISS\";\n      this.misses.push(coords);\n\n      this.available.findIndex(\n        (coord, index) =>\n          coord[0] === row &&\n          coord[1] === col &&\n          this.available.splice(index, 1)\n      );\n    } else if (\n      this.hits.some(\n        (ele) =>\n          (ele[0] === coords[0] && ele[1] === coords[1]) || cell === \"MISS\"\n      )\n    ) {\n      throw new Error(\"Cannot interact with cell twice!\");\n    } else {\n      cell.hit();\n      if (localStorage.getItem(\"sfxEnabled\") === \"true\") {\n        cell.isSunk() ? sunkSound.play() : hitSound.play();\n      }\n      this.hits.push(coords);\n\n      this.available.findIndex(\n        (coord, index) =>\n          coord[0] === row &&\n          coord[1] === col &&\n          this.available.splice(index, 1)\n      );\n    }\n  }\n\n  isDefeated() {\n    return this.ships.every((ship) => ship.isSunk());\n  }\n}\n","import Gameboard from \"./gameboard.js\";\n\nexport default class Player {\n  constructor(Name, Id) {\n    this.name = Name;\n    this.id = Id;\n    this.gameboard = new Gameboard();\n  }\n}\n"],"names":["staticSound","Audio","generateBoard","player","document","getElementById","id","style","display","board","innerHTML","i","j","cell","createElement","classList","add","currentCell","gameboard","name","setAttribute","appendChild","updateBoard","coords","row","col","cellDiv","querySelector","isSunk","reverse","forEach","coord","index","setTimeout","x","y","misses","some","miss","hits","hit","remove","updateShipCells","clearShipCells","querySelectorAll","changeToControlCenter","textContent","dockingStation","deployButton","transition","localStorage","getItem","volume","play","pause","currentTime","staticGif","src","position","top","left","width","height","zIndex","opacity","pointerEvents","body","removeChild","winScreen","title","gameOverScreen","gameWinMessage","loseScreen","gameLoseMessage","flexDirection","backgroundColor","color","margin","padding","justifyContent","alignItems","filter","animation","boxSizing","beforeStyle","head","rotateSound","rotate","placeSound","errorSound","trashSound","deploySound","playSound","sound","playSong","song","catch","err","loop","handleDragStart","event","target","handleDragEnd","handleDragOver","contains","preventDefault","getAttribute","split","map","Number","shipLength","children","length","highlightCol","highlightRow","handleDragLeave","dragDrop","Promise","resolve","draggables","cells","draggable","addEventListener","shipPlacement","smallestCell","Array","from","reduce","smallest","smallestRow","checkCollision","place","draggingShip","error","handleDrop","rotateButton","shipsContainer","ships","ship","flexWrap","trashButton","fill","winSong","loseSong","battleSong","computer","player1","player2","turn","isDefeated","receiveAttack","location","reload","getInput","parseInt","getComputerInput","playerGameboard","move","lastHitShip","available","shipCoords","validTargets","shipCoord","Math","random","floor","selectAdjacentCell","hitShip","find","checkIfHit","checkRepeat","ele","dockingSong","menuSong","titleScreen","menuButtons","logo","startButton","headerText","settingsButton","musicEnabled","sfxEnabled","setItem","muted","button","settingsModal","closeButton","musicCheckbox","sfxCheckbox","checked","generateCoords","lengths","orientation","getComputerShips","shipLengths","push","shift","Ship","constructor","this","missSound","hitSound","sunkSound","Gameboard","validateCoordinates","Error","checkBoundary","findIndex","splice","every","Player","Name","Id"],"sourceRoot":""}